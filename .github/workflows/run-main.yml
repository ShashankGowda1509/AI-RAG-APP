name: Flask PDF App CI/CD Pipeline

# Trigger workflow on push to main branch or manual trigger
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  FLASK_APP: app.py
  FLASK_ENV: production

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest flake8
          
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Run tests
        run: pytest
        env:
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
  
  build-and-deploy:
    needs: test
    if: success() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flask-pdf-app:latest
          
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            mkdir -p /data/flask-pdf-app
            docker pull ${{ secrets.DOCKER_USERNAME }}/flask-pdf-app:latest
            docker stop flask-pdf-app || true
            docker rm flask-pdf-app || true
            docker run -d \
              --name flask-pdf-app \
              -p 5000:5000 \
              -e SESSION_SECRET="${{ secrets.SESSION_SECRET }}" \
              -e MAIL_SERVER="${{ secrets.MAIL_SERVER }}" \
              -e MAIL_PORT="${{ secrets.MAIL_PORT }}" \
              -e MAIL_USERNAME="${{ secrets.MAIL_USERNAME }}" \
              -e MAIL_PASSWORD="${{ secrets.MAIL_PASSWORD }}" \
              -e GROQ_API_KEY="${{ secrets.GROQ_API_KEY }}" \
              -v /data/flask-pdf-app:/app/data \
              --restart always \
              ${{ secrets.DOCKER_USERNAME }}/flask-pdf-app:latest
